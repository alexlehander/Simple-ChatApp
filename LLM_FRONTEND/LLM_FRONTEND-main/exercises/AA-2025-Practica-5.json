{
  "title": "Unidad III: Algoritmos para Grafos",
  "description": "Minimum Spanning Trees (MST): condiciones, propiedades de seguridad y crecimiento; algoritmos de Kruskal y Prim; Single-Source Shortest Paths (SSSP): condiciones, relajación, propiedades, Bellman-Ford, Dijkstra, caminos mínimos en DAG y restricciones de diferencia.",
  "problemas": [
    {
      "id": 1,
      "enunciado": "¿Explica qué condiciones debe satisfacer un grafo para que se pueda aplicar un algoritmo de Árbol de Expansión Mínima (MST) y qué componentes debe tener un MST para que sea considerado válido."
    },
    {
      "id": 2,
      "enunciado": "Explica con tus propias palabras cómo crece un Árbol de Expansión Mínima según el algoritmo GENERIC-MST(G, w) descrito en Cormen, incluyendo los pasos fundamentales y la idea detrás del proceso de selección de aristas seguras."
    },
    {
      "id": 3,
      "enunciado": "Aplica el algoritmo de Kruskal paso a paso sobre el siguiente grafo no dirigido y ponderado: V = {A, B, C, D, E}, E = {(A,B,1), (A,C,3), (B,C,4), (B,D,2), (C,D,5), (D,E,7)}, mostrando las aristas seleccionadas en orden y el costo total del MST obtenido."
    },
    {
      "id": 4,
      "enunciado": "Aplica el algoritmo de Prim sobre el mismo grafo del problema anterior, iniciando en el vértice A e indicando en cada paso qué vértice se agrega al árbol y qué arista fue elegida."
    },
    {
      "id": 5,
      "enunciado": "¿Qué condiciones debe cumplir un grafo para que se pueda aplicar el problema de Caminos Más Cortos desde una sola fuente (Single-Source Shortest Path, SSSP), mencionando sus principales variantes según el tipo de grafo y los pesos de las aristas."
    },
    {
      "id": 6,
      "enunciado": "Explica qué ocurre cuando un grafo contiene ciclos o pesos negativos y cómo afectan estas características a los algoritmos de caminos mínimos?"
    },
    {
      "id": 7,
      "enunciado": "Explica qué significa la operación de 'relajación' en los algoritmos de caminos mínimos, incluyendo un ejemplo simple de cómo se actualizan las distancias y cómo se representa un camino más corto en la estructura del grafo."
    },
    {
      "id": 8,
      "enunciado": "Menciona y explica las propiedades fundamentales de los caminos mínimos y del proceso de relajación, según lo descrito en el capítulo 24 de Cormen."
    },
    {
      "id": 9,
      "enunciado": "Aplica el algoritmo de Bellman-Ford sobre el siguiente grafo dirigido con pesos (algunos negativos): V = {S, A, B, C, D}, E = {(S,A,4), (S,B,5), (A,C,-3), (B,C,2), (C,D,4)}, mostrando el resultado de las relajaciones y determinando si existe algún ciclo negativo."
    },
    {
      "id": 10,
      "enunciado": "Describe, con tus palabras, cómo el algoritmo de Bellman-Ford puede utilizarse para detectar ciclos de peso negativo, explicando también qué ocurre con las distancias calculadas cuando se encuentra uno de estos ciclos."
    },
    {
      "id": 11,
      "enunciado": "Aplica el algoritmo de Dijkstra sobre el siguiente grafo con pesos positivos: V = {S, A, B, C, D, E}, E = {(S,A,3), (S,B,5), (A,C,6), (B,C,2), (B,D,4), (C,E,1), (D,E,2)}, mostrando el conjunto de vértices visitados y las distancias mínimas obtenidas desde S."
    },
    {
      "id": 12,
      "enunciado": "Compara el comportamiento del algoritmo de Dijkstra con el de Bellman-Ford, explicando con tus palabras sus diferencias en complejidad, limitaciones y casos de uso."
    }
  ]
}
